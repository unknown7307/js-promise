// icecream through promise
// let stocks = {
//         fruits:["apple","kiwi","banana","mango"],
//         liquid:["water","ice"],
//         holder:["cone","cup","stick"],
//         toppings:["choclates","peanuts"]
//     };

// let is_shop_open = true;

// let order = (time,work) =>{
//     return new Promise((resolve,reject)=>{
//         if(is_shop_open){
//             setTimeout(() => {
//                 resolve(work()); 
//             }, time);
            
//         }
//         else{
//             reject("shop is closed");
//         }
//     })

// }
// order(2000,()=>{
//     console.log(`${stocks.fruits[0]} was selected`)
// }).then(()=>{
//    return order(2000,()=>console.log(`production has satrted`))
// }).then(()=>{
//     return order(2000,()=>console.log(`cut the fruits`))
// }).then(()=>{
//     return order(1000,()=>console.log(`add water and ice`))
// }).then(()=>{
//     return order(1000,()=>console.log(`start the machine`))
// }).then(()=>{
//     return order(1000,()=>console.log('select container'));
// }).then(()=>{
//     return order(1000,()=>console.log(`select topings`))
// }).then(()=>{
//     return order(1000,()=>console.log(`ice creame is served`))
// }).catch(()=>{
//     console.log(`customer is left`)
// }).finally(()=>{
//     console.log(`our shop is closed`)
// })
 

// promise example 222222
// let marks = 80;

// let promise = new Promise((rsolve,reject)=>{
//     if(marks>100){
//         rsolve("you pass")
//     }
//     else{
//         reject("you are fail")
//     }

// });
// let pass = (result)=>{
//     console.log(result)
// }
// let fail = (fail)=>{
//     console.log(fail)
// }
// promise.then(pass).catch(fail);